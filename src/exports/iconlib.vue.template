<script setup>
    // template definition must inject usage fonction manuage as depending on vue
import * as Vue from 'vue'; 
const { inject , defineProps, defineAsyncComponent, watch,shallowRef, reactive} = Vue; 
const props = defineProps({
    name: {
        type: String,
        required: false
    },
    library: {
        type: String,
        default: '%default_lib%'
    },
    title: {
        type: [Boolean, String],
        default: null 
    }
});
const g = inject('lib/icons', null);
const DefSVGIcon = shallowRef(null)
function initDefinition(g, r){
    if (g){ 
        let s = g.libicons && g.libicons[lib];
        if(!s){
            console.error(g);
            console.error('[iconlib] - missing icons library definition ['+lib+']/'+props.name);
        }
        r.DefSVGIcon = s ? s[props.name]: null;
    } else{
        r.DefSVGIcon = defineAsyncComponent( ()=>import(/* @vite-ignore */ `/@id/__x00__virtual:icons/${lib}/`+props.name));
    } 
} 

const lib = props.library || g.default || '%default_lib%';
const sa = ((g) => {
    const r = { DefSVGIcon: null, lib: null };
    initDefinition(g,r); 
    return r;
})(g); 
DefSVGIcon.value = sa.DefSVGIcon;  
const classes = () => {
    function class_def(n) {
        return n.replace(/[^\w_\-]/g, '_').replace(/(_)+/, '_');
    }
    let cl = props.name;
    return ['svg-icons-container', class_def(lib), class_def(cl)].join(' ');
}
watch(()=>props.name, ()=>{ 
    const r = { DefSVGIcon: null, lib: null };
    initDefinition(g, r); 
    DefSVGIcon.value = r.DefSVGIcon;
});

</script>
<template>  
    <span v-bind:className="classes()" v-if="DefSVGIcon" :title="title==false? null : title ?? name"> 
        <DefSVGIcon></DefSVGIcon> 
    </span>     
</template>